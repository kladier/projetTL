
Liste d'idées pour les futurs versions :

- faire une fonctionnalité permettant de compléter un automate, la fonction isComplet() étant déjà faites.

- dans l'idéal il faudrait revoir un peu l'UI. Par exemple : faire 2 grosses colonnes pour l'automate initial (à gauche par exemple) et l'automate minimisé ou déterminisé à droite. Faire un bloc qui prend toute la longueur de la page en bas et permettant d'afficher le texte. 
D'une manière générale, réfléchir à ce que l'affichage soit mieux fait : on voit rarement correctement l'automate initial quand on fait une opération

- Empêcher d'enregistrer un automate s'il n'est pas conforme à nos normes : les transitions ont des numéros >= 1 et qui se suivent (1,2,3) et pas (1,3,4)
. Les autres normes (numéro d'états commencant à 0 et se suivant et pas plus de 10 états pour des questions d'affichage) étant déjà implémentées. C'est pas le plus urgent mais ca permettrait d'empêcher beaucoup de bugs et de crash du logiciel dans des cas bien particuliers.

- Possibilité d'agrandir / rétrécir les différentes fenêtres

- Réaliser la minimisation pour les automates non complets mais déterministes

- Pour toutes les opérations, revoir les textes, faire en sorte que ce soit bien du pas à pas et que les explications soient claires et précises pour des étudiants.
 L'idéal serait peut-être de voir ça avec un professeur de Théorie des Langages.

- Énormément d'améliorations / d'optimisation qu'on pourrait apporter au code, nous avons par exemple repéré beaucoup de blocs de code qui se répétait (autant donc faire une fonction avec), par exemple pour l'affichage d'un automate dans l'interface.

- Possibilité d'enregistrer les automates qui ont été généré par une opération

- Ajout de fonctionnalités faisant le lien entre les automates et les expressions régulières

